name: 'ci'

on:
  push:
    branches: [ '*' ]
  pull_request:
    types: [ opened, edited, reopened, synchronize, review_requested ]
    branches: [ '*' ]
  workflow_call:

env:
  COVER_PKG: github.com/microsoft/gocosmos

jobs:
  GoFmt:
    runs-on: ubuntu-latest
    name: Check format with go fmt
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go env
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Run go fmt
        run: |
          go version
          go fmt ./...

  GoLint:
    name: GoLint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go env
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          only-new-issues: true

  TestModule:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.18', 'oldstable', 'stable' ]
    name: Run module tests with Go ${{ matrix.go }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go env
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Run tests
        run: |
          go version
          go test -v -timeout 9999s -count 1 -p 1 -cover -coverprofile coverage.txt ./
#      - name: Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          flags: module
#          name: module

  TestRestClientNonQuery:
    runs-on: windows-latest
    strategy:
      matrix:
        go: [ '1.18', 'oldstable', 'stable' ]
    name: Run RestClient non-query tests with Go ${{ matrix.go }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go env
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Run tests
        run: |
          try { & "C:\Program Files\Azure Cosmos DB Emulator\Microsoft.Azure.Cosmos.Emulator.exe" /ShutDown } catch {}
          choco upgrade azure-cosmosdb-emulator --no-progress
          & "C:\Program Files\Azure Cosmos DB Emulator\Microsoft.Azure.Cosmos.Emulator.exe" /DisableRateLimiting /NoUI /NoExplorer
          Start-Sleep -s 75
          try { Invoke-RestMethod -Method GET https://127.0.0.1:8081/ } catch {}
          netstat -nt
          $env:COSMOSDB_URL='AccountEndpoint=https://127.0.0.1:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw=='
          cd module_test
          go test -v -timeout 9999s -count 1 -p 1 -cover -coverpkg="$env:COVER_PKG" -coverprofile="../coverage_restclient_nonquery.txt" -run "TestRestClient_[^Q]" ./
          cd ..
#      - name: Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          flags: restclient_nonquery
#          name: restclient_nonquery

  TestRestClientQuery:
    runs-on: windows-latest
    strategy:
      matrix:
        go: [ '1.18', 'oldstable', 'stable' ]
    name: Run RestClient query tests with Go ${{ matrix.go }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go env
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Run tests
        run: |
          try { & "C:\Program Files\Azure Cosmos DB Emulator\Microsoft.Azure.Cosmos.Emulator.exe" /ShutDown } catch {}
          choco upgrade azure-cosmosdb-emulator --no-progress
          & "C:\Program Files\Azure Cosmos DB Emulator\Microsoft.Azure.Cosmos.Emulator.exe" /DisableRateLimiting /NoUI /NoExplorer
          Start-Sleep -s 75
          try { Invoke-RestMethod -Method GET https://127.0.0.1:8081/ } catch {}
          netstat -nt
          $env:COSMOSDB_URL='AccountEndpoint=https://127.0.0.1:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw=='
          cd module_test
          go test -v -timeout 9999s -count 1 -p 1 -cover -coverpkg="$env:COVER_PKG" -coverprofile="../coverage_restclient_query.txt" -run "TestRestClient_QueryDocuments" ./
          cd ..
#      - name: Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          flags: restclient_query
#          name: restclient_query
